"use client";

import { useState, useEffect } from "react";
import { WhatsAppFloat } from "./whatsapp-float";

export function DynamicWhatsAppFloat() {
  const [phoneNumber, setPhoneNumber] = useState<string | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchWhatsAppNumber = async () => {
      try {
        console.log("üîç Buscando n√∫mero do WhatsApp da cl√≠nica...");
        const response = await fetch("/api/clinica-info");
        const data = await response.json();

        console.log("üìä Resposta da API:", data);

        if (response.ok && data.data) {
          // Procura por uma rede social WhatsApp na lista
          const whatsappRede = data.data.find((rede: { nome: string; link: string }) => 
            rede.nome.toLowerCase().includes('whatsapp')
          );
          
          console.log("üì± WhatsApp encontrado:", whatsappRede);
          
          if (whatsappRede?.link) {
            // Usa diretamente o n√∫mero/link cadastrado na tabela
            console.log("‚úÖ Usando n√∫mero do banco:", whatsappRede.link);
            setPhoneNumber(whatsappRede.link);
          } else {
            console.log("‚ö†Ô∏è WhatsApp n√£o encontrado, √≠cone n√£o ser√° exibido");
            setPhoneNumber(null);
          }
        } else {
          console.log("‚ùå Erro na resposta da API:", data);
        }
      } catch (error) {
        console.error("üí• Erro ao buscar n√∫mero do WhatsApp:", error);
        // Mant√©m o n√∫mero padr√£o em caso de erro
      } finally {
        setLoading(false);
      }
    };

    fetchWhatsAppNumber();
  }, []);

  // N√£o renderiza nada enquanto est√° carregando para evitar flash
  if (loading) {
    return null;
  }

  // S√≥ renderiza o bot√£o se houver um n√∫mero cadastrado
  if (!phoneNumber) {
    return null;
  }

  return (
    <WhatsAppFloat 
      phoneNumber={phoneNumber}
      message="Ol√°! Gostaria de mais informa√ß√µes sobre a Cl√≠nica Resilience."
    />
  );
}
